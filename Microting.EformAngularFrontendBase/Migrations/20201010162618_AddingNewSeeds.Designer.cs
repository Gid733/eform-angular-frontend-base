// <auto-generated />

namespace Microting.EformAngularFrontendBase.Migrations
{
    using System;
    using Infrastructure.Data;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;
    using Microsoft.EntityFrameworkCore.Migrations;

    [DbContext(typeof(BaseDbContext))]
    [Migration("20201010162618_AddingNewSeeds")]
    partial class AddingNewSeeds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("DarkTheme")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Formats")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("GoogleAuthenticatorSecretKey")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsGoogleAuthenticatorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TimeZone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.EformConfigurationValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("ConfigurationValues");

                    b.HasData(
                        new
                        {
                            Id = "ConnectionStringsSdk:SdkConnection",
                            Value = ""
                        },
                        new
                        {
                            Id = "ApplicationSettings:DefaultLocale",
                            Value = "en-US"
                        },
                        new
                        {
                            Id = "ApplicationSettings:SiteLink",
                            Value = ""
                        },
                        new
                        {
                            Id = "ApplicationSettings:SecurityCode",
                            Value = "code"
                        },
                        new
                        {
                            Id = "ApplicationSettings:DefaultPassword",
                            Value = "Qq1234567$"
                        },
                        new
                        {
                            Id = "ApplicationSettings:IsTwoFactorForced",
                            Value = "false"
                        },
                        new
                        {
                            Id = "EmailSettings:SmtpHost",
                            Value = ""
                        },
                        new
                        {
                            Id = "EmailSettings:SmtpPort",
                            Value = "25"
                        },
                        new
                        {
                            Id = "EmailSettings:Login",
                            Value = ""
                        },
                        new
                        {
                            Id = "EmailSettings:Password",
                            Value = ""
                        },
                        new
                        {
                            Id = "EmailSettings:SendGridKey",
                            Value = ""
                        },
                        new
                        {
                            Id = "LoginPageSettings:MainText",
                            Value = "eForm Backend"
                        },
                        new
                        {
                            Id = "LoginPageSettings:MainTextVisible",
                            Value = "true"
                        },
                        new
                        {
                            Id = "LoginPageSettings:SecondaryText",
                            Value = "No more paper-forms and back-office data entry"
                        },
                        new
                        {
                            Id = "LoginPageSettings:SecondaryTextVisible",
                            Value = "true"
                        },
                        new
                        {
                            Id = "LoginPageSettings:ImageLink",
                            Value = ""
                        },
                        new
                        {
                            Id = "LoginPageSettings:ImageLinkVisible",
                            Value = "true"
                        },
                        new
                        {
                            Id = "HeaderSettings:MainText",
                            Value = "eForm Backend"
                        },
                        new
                        {
                            Id = "HeaderSettings:MainTextVisible",
                            Value = "true"
                        },
                        new
                        {
                            Id = "HeaderSettings:SecondaryText",
                            Value = "No more paper-forms and back-office data entry"
                        },
                        new
                        {
                            Id = "HeaderSettings:SecondaryTextVisible",
                            Value = "true"
                        },
                        new
                        {
                            Id = "HeaderSettings:ImageLink",
                            Value = ""
                        },
                        new
                        {
                            Id = "HeaderSettings:ImageLinkVisible",
                            Value = "true"
                        },
                        new
                        {
                            Id = "Logging:IncludeScopes",
                            Value = "false"
                        },
                        new
                        {
                            Id = "Logging:IncludeScopes:LogLevel:Default",
                            Value = "Debug"
                        },
                        new
                        {
                            Id = "Logging:IncludeScopes:LogLevel:System",
                            Value = "Information"
                        },
                        new
                        {
                            Id = "Logging:IncludeScopes:LogLevel:Microsoft",
                            Value = "Information"
                        },
                        new
                        {
                            Id = "EformTokenOptions:Issuer",
                            Value = "eForm API"
                        },
                        new
                        {
                            Id = "EformTokenOptions:Audience",
                            Value = "eForm Angular"
                        },
                        new
                        {
                            Id = "EformTokenOptions:Expiration",
                            Value = "12:00:00"
                        },
                        new
                        {
                            Id = "EformTokenOptions:SigningKey",
                            Value = "lTBBR6Wt7RTvcI0jwRvXVPTOmcFV6NnAUA+rIWn/5bs="
                        },
                        new
                        {
                            Id = "EformTokenOptions:CookieName",
                            Value = "Authorization"
                        },
                        new
                        {
                            Id = "PluginStoreSettings:PluginListLink",
                            Value = "https://raw.githubusercontent.com/microting/eform-angular-frontend/master/plugins.json"
                        });
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.EformPlugin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("PluginId")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("PluginId")
                        .IsUnique();

                    b.ToTable("EformPlugins");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AttachPdf")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("LinkToCase")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.ToTable("CasePosts");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePostEmailRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CasePostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EmailRecipientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CasePostId");

                    b.HasIndex("EmailRecipientId");

                    b.ToTable("CasePostEmailRecipients");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePostEmailTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CasePostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EmailTagId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CasePostId");

                    b.HasIndex("EmailTagId");

                    b.ToTable("CasePostEmailTags");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Name");

                    b.ToTable("EmailRecipients");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("EmailTags");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailTagRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EmailRecipientId")
                        .HasColumnType("int");

                    b.Property<int>("EmailTagId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("EmailRecipientId");

                    b.HasIndex("EmailTagId");

                    b.ToTable("EmailTagRecipients");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("E2EId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Link")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LocaleName")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("MenuPosition")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "my-eforms",
                            Link = "/",
                            LocaleName = "MyEforms",
                            MenuPosition = 1,
                            Name = "My eForms",
                            Position = 0,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "device-users",
                            Link = "/device-users",
                            LocaleName = "DeviceUsers",
                            MenuPosition = 1,
                            Name = "Device Users",
                            Position = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "advanced",
                            Link = "",
                            LocaleName = "Advanced",
                            MenuPosition = 1,
                            Name = "Advanced",
                            Position = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "sites",
                            Link = "/advanced/sites",
                            LocaleName = "Sites",
                            MenuPosition = 1,
                            Name = "Sites",
                            ParentId = 3,
                            Position = 0,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "workers",
                            Link = "/advanced/workers",
                            LocaleName = "Workers",
                            MenuPosition = 1,
                            Name = "Workers",
                            ParentId = 3,
                            Position = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "units",
                            Link = "/advanced/units",
                            LocaleName = "Units",
                            MenuPosition = 1,
                            Name = "Units",
                            ParentId = 3,
                            Position = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "search",
                            Link = "/advanced/entity-search",
                            LocaleName = "SearchableList",
                            MenuPosition = 1,
                            Name = "SearchableList",
                            ParentId = 3,
                            Position = 3,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "selectable-list",
                            Link = "/advanced/entity-select",
                            LocaleName = "SelectableList",
                            MenuPosition = 1,
                            Name = "Selectable list",
                            ParentId = 3,
                            Position = 4,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "application-settings",
                            Link = "/application-settings",
                            LocaleName = "ApplicationSettings",
                            MenuPosition = 1,
                            Name = "Application settings",
                            ParentId = 3,
                            Position = 6,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "sign-out-dropdown",
                            Link = "",
                            MenuPosition = 2,
                            Name = "user",
                            Position = 0,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "user-management-menu",
                            Link = "/account-management/users",
                            LocaleName = "UserManagement",
                            MenuPosition = 2,
                            Name = "User Management",
                            ParentId = 10,
                            Position = 0,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "settings",
                            Link = "/account-management/settings",
                            LocaleName = "Settings",
                            MenuPosition = 2,
                            Name = "Settings",
                            ParentId = 10,
                            Position = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "security",
                            Link = "/security",
                            LocaleName = "Security",
                            MenuPosition = 2,
                            Name = "Security",
                            ParentId = 10,
                            Position = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "change-password",
                            Link = "/account-management/change-password",
                            LocaleName = "ChangePassword",
                            MenuPosition = 2,
                            Name = "Change password",
                            ParentId = 10,
                            Position = 3,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "sign-out",
                            Link = "/auth/sign-out",
                            LocaleName = "Logout",
                            MenuPosition = 2,
                            Name = "Logout",
                            ParentId = 10,
                            Position = 4,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "plugins-settings",
                            Link = "/plugins-settings",
                            LocaleName = "PluginsSettings",
                            MenuPosition = 1,
                            Name = "Plugins",
                            ParentId = 3,
                            Position = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "folders",
                            Link = "/advanced/folders",
                            LocaleName = "Folders",
                            MenuPosition = 1,
                            Name = "Folders",
                            ParentId = 3,
                            Position = 5,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            E2EId = "email-recipients",
                            Link = "/email-recipients",
                            LocaleName = "EmailRecipients",
                            MenuPosition = 1,
                            Name = "Email recipients",
                            ParentId = 3,
                            Position = 7,
                            UpdatedByUserId = 0,
                            Version = 0
                        });
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.EformInGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SecurityGroupId");

                    b.HasIndex("TemplateId");

                    b.HasIndex("TemplateId", "SecurityGroupId")
                        .IsUnique();

                    b.ToTable("EformInGroups");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.EformPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EformInGroupId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("EformInGroupId");

                    b.HasIndex("PermissionId", "EformInGroupId")
                        .IsUnique();

                    b.ToTable("EformPermissions");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.GroupPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SecurityGroupId");

                    b.HasIndex("PermissionId", "SecurityGroupId")
                        .IsUnique();

                    b.ToTable("GroupPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 29,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 27,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 28,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 30,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 31,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 32,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 34,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 33,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 35,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 36,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 42,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 37,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 45,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 46,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 38,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 39,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 41,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 40,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 29,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 42,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 34,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 33,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 35,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 37,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 49,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 50,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 51,
                            SecurityGroupId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 43,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 44,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionId = 47,
                            SecurityGroupId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        });
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimName")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionName")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ClaimName")
                        .IsUnique();

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            ClaimName = "workers_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 1,
                            ClaimName = "workers_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create",
                            PermissionTypeId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            ClaimName = "workers_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            ClaimName = "workers_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 1,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            ClaimName = "sites_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            ClaimName = "sites_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            ClaimName = "sites_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 2,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            ClaimName = "entity_search_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 3,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            ClaimName = "entity_search_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create",
                            PermissionTypeId = 3,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 12,
                            ClaimName = "entity_search_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 3,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 11,
                            ClaimName = "entity_search_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 3,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 14,
                            ClaimName = "entity_select_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 4,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 13,
                            ClaimName = "entity_select_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create",
                            PermissionTypeId = 4,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 16,
                            ClaimName = "entity_select_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 4,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 15,
                            ClaimName = "entity_select_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 4,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 18,
                            ClaimName = "users_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 5,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 17,
                            ClaimName = "users_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create",
                            PermissionTypeId = 5,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 20,
                            ClaimName = "users_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 5,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 19,
                            ClaimName = "users_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 5,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 21,
                            ClaimName = "units_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 6,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 22,
                            ClaimName = "units_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 6,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 24,
                            ClaimName = "device_users_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 7,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 23,
                            ClaimName = "device_users_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create",
                            PermissionTypeId = 7,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 26,
                            ClaimName = "device_users_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 7,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 25,
                            ClaimName = "device_users_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update",
                            PermissionTypeId = 7,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 27,
                            ClaimName = "eforms_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 28,
                            ClaimName = "eforms_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 29,
                            ClaimName = "eforms_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 30,
                            ClaimName = "eforms_update_columns",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update columns",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 31,
                            ClaimName = "eforms_download_xml",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Download XML",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 32,
                            ClaimName = "eforms_upload_zip",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Upload ZIP",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 33,
                            ClaimName = "cases_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Cases read",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 34,
                            ClaimName = "case_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Case read",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 35,
                            ClaimName = "case_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Case update",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 36,
                            ClaimName = "case_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Case delete",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 37,
                            ClaimName = "case_get_pdf",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Get PDF",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 45,
                            ClaimName = "case_get_docx",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Get DOCX",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 46,
                            ClaimName = "case_get_pptx",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Get PPTX",
                            PermissionTypeId = 8,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 38,
                            ClaimName = "eforms_pairing_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Pairing read",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 39,
                            ClaimName = "eforms_pairing_update",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Pairing update",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 40,
                            ClaimName = "eforms_read_tags",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read tags",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 41,
                            ClaimName = "eforms_update_tags",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update tags",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 42,
                            ClaimName = "eforms_get_csv",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Get CSV",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 43,
                            ClaimName = "eforms_read_jasper_report",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read Jasper Report",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 44,
                            ClaimName = "eforms_update_jasper_report",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Update Jasper Report",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 47,
                            ClaimName = "eform_export_eform_excel",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Export eForm excel",
                            PermissionTypeId = 9,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 49,
                            ClaimName = "email_recipient_create",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Create e-mail recipients",
                            PermissionTypeId = 10,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 50,
                            ClaimName = "email_recipient_delete",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Delete e-mail recipients",
                            PermissionTypeId = 10,
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 51,
                            ClaimName = "email_recipient_read",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            PermissionName = "Read e-mail recipients",
                            PermissionTypeId = 10,
                            UpdatedByUserId = 0,
                            Version = 0
                        });
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Workers",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Sites",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Entity search",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Entity select",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "User management",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Units",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Device users",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Cases",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "Eforms",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "EmailRecipients",
                            UpdatedByUserId = 0,
                            Version = 0
                        });
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.SecurityGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("RedirectLink")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SecurityGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "eForm admins",
                            UpdatedByUserId = 0,
                            Version = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByUserId = 0,
                            Name = "eForm users",
                            UpdatedByUserId = 0,
                            Version = 0
                        });
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.SecurityGroupUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EformUserId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SecurityGroupId");

                    b.HasIndex("EformUserId", "SecurityGroupId")
                        .IsUnique();

                    b.ToTable("SecurityGroupUsers");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("HeaderImage")
                        .HasColumnType("longblob");

                    b.Property<string>("HeaderVisibility")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDateVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWorkerNameVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("TemplateId")
                        .IsUnique();

                    b.ToTable("EformReports");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportDataItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("DataItemId")
                        .HasColumnType("int");

                    b.Property<int>("EformReportElementId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<bool>("Visibility")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("DataItemId");

                    b.HasIndex("EformReportElementId");

                    b.HasIndex("ParentId");

                    b.ToTable("EformReportDataItems");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EformReportId")
                        .HasColumnType("int");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("EformReportId");

                    b.HasIndex("ElementId");

                    b.HasIndex("ParentId");

                    b.ToTable("EformReportElements");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.SavedTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("EformUserId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WorkflowState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("EformUserId", "TagId")
                        .IsUnique();

                    b.ToTable("SavedTags");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUserRole", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePostEmailRecipient", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePost", "CasePost")
                        .WithMany("Recipients")
                        .HasForeignKey("CasePostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailRecipient", "EmailRecipient")
                        .WithMany()
                        .HasForeignKey("EmailRecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePostEmailTag", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.CasePost", "CasePost")
                        .WithMany("Tags")
                        .HasForeignKey("CasePostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailTag", "EmailTag")
                        .WithMany()
                        .HasForeignKey("EmailTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailTagRecipient", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailRecipient", "EmailRecipient")
                        .WithMany("TagRecipients")
                        .HasForeignKey("EmailRecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Mailing.EmailTag", "EmailTag")
                        .WithMany()
                        .HasForeignKey("EmailTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.MenuItem", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.MenuItem", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.EformInGroup", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.SecurityGroup", "SecurityGroup")
                        .WithMany("EformsInGroup")
                        .HasForeignKey("SecurityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.EformPermission", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.EformInGroup", "EformInGroup")
                        .WithMany("EformPermissions")
                        .HasForeignKey("EformInGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.GroupPermission", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.SecurityGroup", "SecurityGroup")
                        .WithMany()
                        .HasForeignKey("SecurityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.Permission", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.PermissionType", "PermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.SecurityGroupUser", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", "EformUser")
                        .WithMany()
                        .HasForeignKey("EformUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Permissions.SecurityGroup", "SecurityGroup")
                        .WithMany("SecurityGroupUsers")
                        .HasForeignKey("SecurityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportDataItem", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportElement", "EformReportElement")
                        .WithMany("DataItems")
                        .HasForeignKey("EformReportElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportDataItem", "Parent")
                        .WithMany("NestedDataItems")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportElement", b =>
                {
                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReport", "EformReport")
                        .WithMany("ReportElements")
                        .HasForeignKey("EformReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFormAPI.Web.Infrastructure.Database.Entities.Reports.EformReportElement", "Parent")
                        .WithMany("NestedElements")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("eFormAPI.Web.Infrastructure.Database.Entities.SavedTag", b =>
                {
                    b.HasOne("Microting.eFormApi.BasePn.Infrastructure.Database.Entities.EformUser", "EformUser")
                        .WithMany()
                        .HasForeignKey("EformUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
